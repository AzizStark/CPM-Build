{"version":3,"sources":["./src/app/main/skills/modal/modal.component.ts","./src/app/main/skills/modal/modal.component.html","./src/app/main/skills/skills-routing.module.ts","./src/app/main/skills/skills-table/skills-table.component.ts","./src/app/main/skills/skills-table/skills-table.component.html","./src/app/main/skills/skills.component.ts","./src/app/main/skills/skills.component.html","./src/app/main/skills/skills.module.ts"],"names":[],"mappings":"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","file":"main-skills-skills-module.js","sourcesContent":["import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: 'app-modal',\n  templateUrl: './modal.component.html',\n  styleUrls: ['./modal.component.scss']\n})\nexport class ModalComponent implements OnInit {\n  @Input() isMsgBoxVisible;\n  @Input() editOption;\n  @Input() selectedSkill;\n  @Output() toggle = new EventEmitter();\n  @Output() perform = new EventEmitter();\n  closeIcon = faTimes;\n  constructor() { }\n  ngOnInit(): void {\n  }\n  /**\n   * @emits performOperation\n   * @description Trigger for CRUD skills service\n   */\n  performOperation = () => {\n    this.perform.emit();\n  }\n  /**\n   * @emits toggleModal\n   * @description Trigger for modal on/off\n   */\n  toggleModal = (mode) => {\n    this.toggle.emit(mode);\n  }\n}\n","<div class=\"overlay\" *ngIf=\"this.isMsgBoxVisible\">\n  <div class=\"creator-box\">\n    <div class=\"msg-box\">\n      <div class=\"title-bar\">\n        <h1 class=\"sub-title-4-w flex-occupy\">{{this.editOption.title}}</h1>\n        <fa-icon class=\"close-icon pointer\" [icon]=\"closeIcon\" size=\"2x\"\n          (click)=\"toggleModal({'operation' : 'close', 'data' : null})\">\n        </fa-icon>\n      </div>\n      <div class=\"msg-box-container\">\n        <input class=\"input-bar\" type=\"text\" placeholder=\"Enter skill name\" [(ngModel)]=\"selectedSkill.name\" /> <br>\n        <textarea class=\"input-box\" placeholder=\"Enter Description\" [(ngModel)]=\"selectedSkill.description\"></textarea>\n        <br> <br>\n        <input class=\"button-normal\" type=\"button\" value=\"{{this.editOption.button}}\" (click)=\"performOperation()\" />\n      </div>\n    </div>\n  </div>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SkillsComponent } from './skills.component';\n\nconst routes: Routes = [\n  {path: '', component: SkillsComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\n\nexport class SkillsRoutingModule { }\n","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\nimport { faPen, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { PaginationService } from 'src/app/core/pagination/pagination.service';\nimport { Pagination } from 'src/app/core/pagination/pagination';\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './skills-table.component.html',\n  styleUrls: ['./skills-table.component.scss']\n})\n\nexport class SkillsTableComponent implements OnInit {\n  @Input() skills;\n  @Output() toggle = new EventEmitter();\n  @Output() delete = new EventEmitter();\n  // icons\n  editIcon = faPen;\n  deleteIcon = faTrash;\n\n  countOptions = [10, 20, 40];\n  sortOptions = ['All', 'ResourceCount'];\n  totalItems = 40;\n\n  constructor(private paginationService: PaginationService) { }\n  ngOnInit(): void { }\n  /**\n   * @method toggleModal\n   * @emits Editmode\n   * @description Trigger for toggling modal\n   */\n  toggleModal = (mode) => {\n    this.toggle.emit(mode);\n  }\n  /**\n   * @method deleteSkill\n   * @emits id\n   * @description Trigger for deleting skill\n   */\n  deleteSkill = (id) => {\n    this.delete.emit(id);\n  }\n\n\n  /**\n   * @method changePage\n   * @description Changes page number in pagination\n   * @param num Page number\n   */\n  changePage = (num: number) => {\n    this.changePageState(\n      {\n        id: 'skill-pagination', pageNumber: num, itemsCount: this.retrievePageState.itemsCount,\n        sortOptions: this.retrievePageState.sortOptions, activeOptions: this.retrievePageState.activeOptions\n      }\n    );\n  }\n\n  /**\n   * @method changePageState\n   * @description Changes the state of pagination in service\n   */\n  changePageState = (pageState: Pagination) => {\n    this.paginationService.setSkillsPageState(pageState);\n  }\n\n  /**\n   * @method retrievePageState\n   * @description Gets the current pagination state\n   */\n  get retrievePageState(): Pagination {\n    return this.paginationService.skillsPageState;\n  }\n}\n","<div class=\"table-responsive\">\n    <table class=\"sub-title-6\">\n        <thead>\n            <th>ID</th>\n            <th>Skill Name</th>\n            <th>Description</th>\n            <th>Number of Resources</th>\n            <th></th>\n            <th></th>\n        </thead>\n        <tbody>\n            <tr\n                *ngFor=\"let skill of skills | async | paginate: { id: 'skill-pagination', itemsPerPage: this.retrievePageState.itemsCount, currentPage: this.retrievePageState.pageNumber, totalItems: totalItems }\">\n                <td>{{skill.id}}</td>\n                <td>{{skill.title}}</td>\n                <td>{{skill.description}}</td>\n                <td>{{skill.resourcescount}}</td>\n                <td>\n                    <fa-icon [icon]=\"editIcon\" size=\"ls\" class=\"color-grey pointer\"\n                        (click)=\"toggleModal({'operation' : 'update', 'data' : skill})\">\n                    </fa-icon>\n                </td>\n                <td>\n                    <fa-icon [icon]=\"deleteIcon\" size=\"ls\" class=\"color-grey pointer\" (click)=\"deleteSkill(skill.id)\">\n                    </fa-icon>\n                </td>\n            </tr>\n        <tbody>\n    </table>\n    <pagination-controls id=\"skill-pagination\" class=\"sub-title-6 text-centered\" (pageChange)=\"changePage($event)\">\n    </pagination-controls>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { SkillsService } from '../../core/core-data/skills/skills.service';\nimport { Observable } from 'rxjs';\nimport { Skill } from '../../core/core-data/skills/skills';\nimport { PaginationService } from 'src/app/core/pagination/pagination.service';\nimport { Pagination } from 'src/app/core/pagination/pagination';\n\n@Component({\n  selector: 'app-skills',\n  templateUrl: './skills.component.html',\n  styleUrls: ['./skills.component.scss']\n})\n\nexport class SkillsComponent implements OnInit {\n  // Observable\n  skills: Observable<Skill[]>;\n\n  // States\n  isMsgBoxVisible = false;\n  editOption = { title: '', button: '' };\n  selectedSkill = {\n    user_type: 1,\n    user_id: 3,\n    id: null,\n    name: '',\n    description: '',\n    resourcescount: 23\n  };\n\n  // page state\n  countOptions = [10, 20, 40];\n  sortOptions = ['All', 'Resources'];\n  unassigned = true;\n  totalItems = 20;\n\n  constructor(private skillsService: SkillsService, private paginationService: PaginationService) {\n  }\n\n  ngOnInit(): void {\n    this.getSkills();\n\n    this.paginationService.changeSkillsPageState.subscribe(res => {\n      this.getSkills();\n    });\n  }\n\n  /**\n   * @method Get skill list from service\n   */\n  getSkills = () => {\n    this.skills = this.skillsService.getSkills(this.retrievePageState.pageNumber, this.retrievePageState.itemsCount);\n  }\n\n  /**\n   * @method addSkill\n   * @description Creates a new skill\n   */\n  addSkill = () => {\n    this.skillsService.createSkill(this.selectedSkill).subscribe(res => {\n      this.getSkills();\n      this.toggleMsgBox({ operation: 'reset', data: null });\n    });\n  }\n\n  /**\n   * @method updateSkill\n   * @description Update an existing skill\n   */\n  updateSkill = () => {\n    this.skillsService.updateSkill(this.selectedSkill).subscribe(res => {\n      this.getSkills();\n      this.toggleMsgBox({ operation: 'reset', data: null });\n    });\n  }\n\n  /**\n   * @method deleteSkill\n   * @description Deletes a skill\n   */\n  deleteSkill = (id) => {\n    if (window.confirm('Are you sure you want to delete this skill?')) {\n      this.skillsService.removeSkill(id).subscribe(res => {\n        this.getSkills();\n      });\n    }\n  }\n\n  /**\n   * @method resetSkill\n   * @description reset the temporary skill content\n   */\n  resetSkill = () => {\n    this.selectedSkill = {\n      user_id: 3,\n      user_type: 1,\n      id: null,\n      name: '',\n      description: '',\n      resourcescount: 23\n    };\n  }\n\n  /**\n   * @method toggleMsgBox\n   * @description Toggles the modal on/off\n   */\n  toggleMsgBox = (skilldata) => {\n    if (skilldata.operation === 'add') {\n      this.editOption = { title: 'Add new skill', button: 'Add' };\n    }\n    else if (skilldata.operation === 'update') {\n      this.selectedSkill = Object.assign({}, skilldata.data);\n      this.editOption = { title: 'Update skill', button: 'Update' };\n    }\n    else {\n      this.resetSkill();\n    }\n    this.isMsgBoxVisible = !this.isMsgBoxVisible;\n  }\n\n  /**\n   * @method performOperation\n   * @description Create/Update on skill\n   */\n  performOperation = ($event: any) => {\n    if (this.selectedSkill.id === null) {\n      this.addSkill();\n    }\n    else if (this.editOption.button !== null) {\n      this.updateSkill();\n    }\n    else {\n      window.alert('Invalid Operation');\n    }\n  }\n\n  /**\n   * @method changePageState\n   * @description Changes the state of pagination in service\n   */\n  changePageState = (pageState: Pagination) => {\n    this.paginationService.setSkillsPageState(pageState);\n  }\n\n  /**\n   * @method changeItemsCount\n   * @description Changes the number of items displayed in per page\n   * @param num Items count\n   */\n  changeItemsCount = (num: number) => {\n    this.changePageState({\n      id: 'skill-pagination', pageNumber: 1, itemsCount: num, sortOptions: this.retrievePageState.sortOptions,\n      activeOptions: this.retrievePageState.activeOptions\n    });\n    this.getSkills();\n  }\n\n  /**\n   * @method changeSortOption\n   * @description Changes sorting option for the items displayed\n   * @param option Sorting format option\n   */\n  changeSortOption = (option: string) => {\n    this.changePageState({\n      id: 'skill-pagination', pageNumber: 1, itemsCount: this.retrievePageState.itemsCount,\n      sortOptions: option, activeOptions: this.retrievePageState.activeOptions\n    });\n    this.getSkills();\n  }\n\n  /**\n   * @method retrievePageState\n   * @description Gets the current pagination state\n   */\n  get retrievePageState(): Pagination {\n    return this.paginationService.skillsPageState;\n  }\n}\n","<div class=\"coda-content\">\n  <app-modal [isMsgBoxVisible]=\"isMsgBoxVisible\" [editOption]=\"editOption\" [selectedSkill]=\"selectedSkill\"\n    (toggle)=\"toggleMsgBox($event)\" (perform)=\"performOperation($event)\">\n  </app-modal>\n  <div class=\"top-controls\">\n    <h1 class=\"title-1\">Available Skills</h1>\n    <br>\n    <div class=\"search-bar\">\n      <input type=\"text\" class=\"search-input-bar sub-title-6\" placeholder=\"Search Skills\" />\n      <input type=\"button\" class=\"button-search pointer\" value=\"Search\" />\n    </div> &nbsp; &nbsp;\n    <div class=\"flex-display\">\n      <div class=\"items-selector\">\n        <h3 class=\"sub-title-6 font-grey\"> Show &nbsp; </h3>\n        <select [ngModel]=\"this.retrievePageState.sortOptions\" class=\"drop-down sub-title-6\"\n          (ngModelChange)=\"changeSortOption($event)\">\n          <option class=\"drop-option\" *ngFor=\"let option of sortOptions\" [ngValue]=\"option\">\n            {{option}}\n          </option>\n        </select>\n      </div> &nbsp; &nbsp;\n      <div class=\"items-selector\">\n        <h3 class=\"sub-title-6 font-grey\"> Items per page &nbsp; </h3>\n        <select [ngModel]=\"this.retrievePageState.itemsCount\" (ngModelChange)=\"changeItemsCount($event)\"\n          class=\"drop-down sub-title-6\">\n          <option class=\"drop-option\" *ngFor=\" let count of countOptions\" [ngValue]=\"count\">\n            {{count}}\n          </option>\n        </select>\n      </div>\n    </div>\n  </div>\n\n  <app-table [skills]=\"skills\" (delete)=\"deleteSkill($event)\" (toggle)=\"toggleMsgBox($event)\">\n  </app-table>\n  <br>\n  <input class=\"button-xl right-float pointer sub-title-6\" (click)=\"toggleMsgBox({'operation' : 'add', 'data' : null})\"\n    type=\"button\" value=\"Add Skill\" />\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SkillsRoutingModule } from './skills-routing.module';\nimport { SkillsComponent } from './skills.component';\nimport { FormsModule } from '@angular/forms';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { ModalComponent } from './modal/modal.component';\nimport { SkillsTableComponent } from './skills-table/skills-table.component';\nimport { NgxPaginationModule } from 'ngx-pagination';\n\n@NgModule({\n  declarations: [SkillsComponent, ModalComponent, SkillsTableComponent],\n  imports: [\n    CommonModule,\n    SkillsRoutingModule,\n    FontAwesomeModule,\n    FormsModule,\n    NgxPaginationModule\n  ],\n  providers: [\n  ]\n})\nexport class SkillsModule { }\n"],"sourceRoot":"webpack:///"}