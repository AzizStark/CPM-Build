{"version":3,"sources":["./src/app/core/core-data/resources/resources.service.ts","./src/app/core/core-data/skills/skills.service.ts"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Resource } from './resource';\nimport { ResourceData } from './resourcedata';\nimport { PaginatedResult } from './paginatedResult';\nimport { environment } from '../../../../environments/environment';\n\nconst BASE_URL = environment.SERVERLESS_API_ENDPOINT;\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ResourcesService {\n  model = 'resources';\n  constructor(private httpClient: HttpClient) { }\n\n  getResources = (page, items, unassigned) => {\n    if (unassigned === 'All') {\n      return this.httpClient.get<PaginatedResult>(`${BASE_URL}${this.model}?page=${page}&limit=${items}`);\n    } else {\n      return this.httpClient.get<PaginatedResult>(`${BASE_URL}${this.model}?page=${page}&limit=${items}&unassigned=true`);\n    }\n  }\n\n  getResource = (id) => {\n    return this.httpClient.get<ResourceData>(`${BASE_URL}${this.model}/${id}`);\n  }\n\n  getSuggestedResources = (searchedResource) => {\n    return this.httpClient.get<ResourceData[]>(`${BASE_URL}${this.model}?firstName_like=${searchedResource}`);\n  }\n\n  getMatchingResources = (skills) => {\n    // replace the actual implementation when connecting with API\n    return this.httpClient.get<ResourceData[]>(`${BASE_URL}${this.model}?_limit=10`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Skill } from './skills';\nimport { SkillSuggestion } from './skillSuggestion';\nimport { SkillSuggestionResult } from './skillSuggestionResult';\nimport { environment } from '../../../../environments/environment';\n\nconst BASE_URL = environment.SERVERLESS_API_ENDPOINT;\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class SkillsService {\n  model = 'skills';\n\n  constructor(private httpClient: HttpClient) { }\n\n  allSkills = () => {\n    return this.httpClient.get<Skill[]>(`${BASE_URL}${this.model}`);\n  }\n\n  getSkills = (page, items) => {\n    return this.httpClient.get<Skill[]>(`${BASE_URL}${this.model}?_page=${page}&_limit=${items}`);\n  }\n\n  getUrl = () => {\n    return `${BASE_URL}${this.model}`;\n  }\n\n  createSkill = (skill) => {\n    return this.httpClient.post(this.getUrl(), skill);\n  }\n\n  updateSkill = (skill) => {\n    return this.httpClient.patch(`${this.getUrl()}/${skill.id}`, skill);\n  }\n\n  removeSkill = (id) => {\n    return this.httpClient.delete(`${this.getUrl()}/${id}`);\n  }\n\n  getTopX = (topX) => {\n    return this.httpClient.get<SkillSuggestion[]>(`${this.getUrl()}?_sort=resourcescount&_order=desc&_limit=${topX}`);\n  }\n\n  getSuggestedSkills = skillSearched => {\n    return this.httpClient.get<SkillSuggestionResult>(`${this.getUrl()}/search/?q=${skillSearched}`);\n  }\n}\n"],"sourceRoot":"webpack:///"}