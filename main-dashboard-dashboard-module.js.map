{"version":3,"sources":["./src/app/core/core-data/dashboard/dashboard.service.ts","./src/app/main/dashboard/dashboard-routing.module.ts","./src/app/main/dashboard/dashboard.component.ts","./src/app/main/dashboard/dashboard.component.html","./src/app/main/dashboard/dashboard.module.ts"],"names":[],"mappings":"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","file":"main-dashboard-dashboard-module.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Dashboard } from './dashboard';\nimport { environment } from '../../../../environments/environment';\n\nconst BASE_URL = environment.SPRINGBOOT_API_ENDPOINT;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DashboardService {\n  model = 'dashboard';\n  constructor(private httpClient: HttpClient) { }\n\n  getDashboardData = () => {\n    return this.httpClient.get<Dashboard>(`${BASE_URL}${this.model}`);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DashboardComponent } from './dashboard.component';\n\nconst routes: Routes = [\n  {path: '', component: DashboardComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DashboardRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { faUsers, faUsersCog, faThList, faCheckDouble, faHourglassHalf, faExclamationCircle } from '@fortawesome/free-solid-svg-icons';\nimport { DashboardService } from '../../core/core-data/dashboard/dashboard.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\n\nexport class DashboardComponent implements OnInit {\n  /** @var date variable used for displaying current time */\n  public now: Date = new Date();\n  // states\n  dataList1;\n  dataList2;\n  constructor(private dashboardService: DashboardService) {\n    setInterval(() => {\n      this.now = new Date();\n    }, 1);\n  }\n  /**\n   * @method getDashData\n   * @description Fetches the dashboard data\n   */\n  getDashData = () => {\n    this.dashboardService.getDashboardData().subscribe(res => {\n      // first row data\n      this.dataList1 = [\n        { title: 'Total Resources', count: res.resourcesTotal, icon: faUsersCog },\n        { title: 'Total Clients', count: res.clientsTotal, icon: faUsers },\n        { title: 'Total Projects', count: res.projectsTotal, icon: faThList }\n      ];\n      // second row data\n      this.dataList2 = [\n        { title: 'Projects Done', count: res.projectsDone, icon: faCheckDouble },\n        { title: 'Current Projects', count: res.projectsOnProgress, icon: faHourglassHalf },\n        { title: 'Projects Overdue', count: res.projectsOverDue, icon: faExclamationCircle }\n      ];\n    });\n  }\n  ngOnInit(): void {\n    this.getDashData();\n  }\n}\n","<div class=\"coda-content\">\n    <div class=\"time-bar\">\n        <div class=\"spaced-container\">\n            <h1 class=\"xl-text\"> Welcome back, <br> Steinfeld! </h1>\n            <span class=\"flex-display time-box\">\n                <h1 class=\"xl-text time\"> {{now | date:'hh:mm' }} </h1>\n                <p>{{now | date:'a' }}</p>\n            </span>\n            <img class=\"side-img\" src=\"../../../assets/timebar-pic.png\" />\n        </div>\n    </div>\n    <br>\n    <h1 class=\"title-1\"> Organization </h1>\n    <br>\n    <div>\n        <div class=\"stack-row\" *ngIf=\"dataList1\">\n            <app-card class=\"appcard\" *ngFor=\"let data of dataList1; let last = last\" [ngClass]=\"{'last-card': last}\"\n                [title]=\"data.title\" [count]=\"data.count\" [icon]=\"data.icon\"></app-card>\n        </div>\n        <app-loader *ngIf=\"!dataList1\"></app-loader>\n        <br class=\"breaker\">\n        <h1 class=\"title-1\"> Projects Stats </h1>\n        <br>\n        <div class=\"stack-row\" *ngIf=\"dataList2\">\n            <app-card class=\"appcard\" *ngFor=\"let data of dataList2; let last = last\" [ngClass]=\"{'last-card': last}\"\n                [title]=\"data.title\" [count]=\"data.count\" [icon]=\"data.icon\"></app-card>\n        </div>\n        <app-loader *ngIf=\"!dataList2\"></app-loader>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DashboardRoutingModule } from './dashboard-routing.module';\nimport { DashboardComponent } from './dashboard.component';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { FormsModule } from '@angular/forms';\nimport { SharedModule } from '../../shared/shared.module';\n\n@NgModule({\n  declarations: [DashboardComponent],\n  imports: [\n    CommonModule,\n    DashboardRoutingModule,\n    FontAwesomeModule,\n    FormsModule,\n    SharedModule\n  ],\n  exports: [\n    DashboardComponent\n  ],\n})\nexport class DashboardModule { }\n"],"sourceRoot":"webpack:///"}