{"version":3,"sources":["./src/app/main/clients/client-alter/client-alter.component.ts","./src/app/main/clients/client-alter/client-alter.component.html","./src/app/main/clients/client-view/client-view.component.ts","./src/app/main/clients/client-view/client-view.component.html","./src/app/main/clients/clients-card/clients-card.component.ts","./src/app/main/clients/clients-card/clients-card.component.html","./src/app/main/clients/clients-routing.module.ts","./src/app/main/clients/clients.component.ts","./src/app/main/clients/clients.component.html","./src/app/main/clients/clients.module.ts"],"names":[],"mappings":"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","file":"main-clients-clients-module.js","sourcesContent":["import { ClientResponse } from './../../../core/core-data/clients/clientResponse';\nimport { ClientRequest } from './../../../core/core-data/clients/clientRequest';\nimport { ProjectSuggestion } from './../../../core/core-data/projects/projectSuggestion';\nimport { Component, OnInit } from '@angular/core';\nimport { faCheck, faTimes, faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { ClientUIModel } from '../../../core/core-data/clients/clientUIModel';\nimport { SkillsService } from '../../../core/core-data/skills/skills.service';\nimport { ClientsService } from '../../../core/core-data/clients/clients.service';\nimport { ResourcesService } from '../../../core/core-data/resources/resources.service';\nimport { ClientValidation } from '../../../core/utils/validation';\nimport { Observable, of } from 'rxjs';\nimport { switchMap, debounceTime, distinctUntilChanged } from 'rxjs/operators';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormControl } from '@angular/forms';\nimport { ProjectsService } from 'src/app/core/core-data/projects/projects.service';\n\n@Component({\n  selector: 'app-client-alter',\n  templateUrl: './client-alter.component.html',\n  styleUrls: ['./client-alter.component.scss']\n})\nexport class ClientAlterComponent implements OnInit {\n\n  checkIcon = faCheck;\n  crossicon = faTimes;\n  plusIcon = faPlus;\n\n  projects: Observable<ProjectSuggestion[]>;\n  suggestedProjects = [{ id: 1, name: 'Hospital Management System' }, { id: 2, name: 'Project Management System' }];\n\n  projectSuggestFormControl = new FormControl();\n\n  // errors\n  errors = {\n    isValid: false,\n    about: '',\n    clientName: '',\n    projects: '',\n  };\n\n  // project state\n  clientModel: ClientUIModel = {\n    clientName: '',\n    about: '',\n    isActive: true,\n    projects: []\n  };\n  activity = 'Active';\n\n\n\n  // edit state\n  isEditMode = false;\n\n  constructor(\n    private skillsService: SkillsService,\n    private clientService: ClientsService,\n    private resourceService: ResourcesService,\n    private router: Router, private route: ActivatedRoute, private projectService: ProjectsService\n  ) { }\n\n  ngOnInit(): void {\n    // check with the URL if edit or add client mode\n    const url = this.route.snapshot.url;\n    if (url.length >= 2 && Number(this.route.snapshot.params.client) && url[1].path === 'edit') {\n      this.clientService.getClient(this.route.snapshot.params.client).subscribe(res => {\n        this.preFillFields(res);\n        this.isEditMode = true;\n      });\n    }\n  }\n\n  /**\n   * @method preFillFields\n   * @description Pre fills all the fields to edit the client\n   * @param client The client to be edited\n   */\n  preFillFields = (client) => {\n    this.clientModel = {\n      clientName: client.clientName,\n      about: client.about,\n      isActive: client.isActive,\n      projects: client.projects.map(project => ({ id: project.projectID, name: project.projectName }))\n    };\n    this.removeAddedProjects(this.clientModel.projects);\n    this.setActivity();\n  }\n\n  /**\n   * @method setActivity\n   * @description sets the activity in the ngModel\n   */\n  setActivity = () => {\n    if (this.clientModel.isActive) {\n      this.activity = 'Active';\n    } else {\n      this.activity = 'InActive';\n    }\n  }\n\n  /**\n   * @method onChangeActivity\n   * @description changes the activity in the client Model\n   */\n  onChangeActivity = (activity) => {\n    this.clientModel.isActive = activity;\n  }\n\n  /**\n   * @param projectname Name of the project to be added\n   * @param projectid ID of the project to be added\n   */\n  addProject = (projectid, projectname) => {\n    this.clientModel.projects.push({ id: projectid, name: projectname });\n    this.removeAddedProjects(this.clientModel.projects);\n  }\n\n  /**\n   * @description remove all the added projects from suggested projects\n   * @param addedProjects Projects alrady added to the client\n   * @returns suggestedProjects returns suggested projects with all the added projects removed\n   */\n  removeAddedProjects = (addedProjects) => {\n    addedProjects.forEach(addedProject => {\n      this.suggestedProjects = this.suggestedProjects.filter(project => project.id !== addedProject.id);\n    });\n    return this.suggestedProjects;\n  }\n\n\n  /**\n   * @description when a project is removed for the client, add it back to suggested project\n   * @param project Currently removed project\n   */\n  onProjectRemoved = (project) => {\n    this.suggestedProjects.push(project);\n  }\n\n\n  // Will be used with real data instead of mock data\n\n  // /**\n  //  * @description suggest a project from the service\n  //  */\n  // suggestProject = () => {\n  //   this.projectSuggestFormControl.valueChanges.pipe(\n  //     debounceTime(500),\n  //     distinctUntilChanged(),\n  //     switchMap(req => {\n  //       if (this.projectSuggestFormControl.value.length > 3) {\n  //         return this.projectService.getSuggestedProjects(this.projectSuggestFormControl.value);\n  //       } else {\n  //         return new Observable<Project[]>();\n  //       }\n  //     })\n  //   ).subscribe(res => {\n  //      this.suggestedProjects = res;\n  //   });\n  // }\n\n  /**\n   * @description suggest a project from the list of suggested projects\n   * @param projectSearched project that is being searched\n   */\n  suggestProject = (projectSearched) => {\n    this.suggestedProjects = this.suggestedProjects.filter(suggestedProject =>\n      (suggestedProject.name).toLowerCase().match(projectSearched.toLowerCase()));\n    this.removeAddedProjects(this.clientModel.projects);\n  }\n\n  /**\n   * @description this function triggers when a project is searched\n   * @param $event To get the target event for the search input\n   */\n  onSearchProject = ($event) => {\n    const projectSearched = $event.target.value.trim();\n    if (projectSearched.length === 0) {\n      // this.getMatchingResources(this.projectModel.requiredSkills);\n    } else {\n      this.suggestProject(projectSearched);\n    }\n  }\n\n  /**\n   * @description confirms the \"cancel creating new client\" action\n   */\n  cancelConfirm = () => {\n    if (confirm('There are unsaved changes, cancel now?')) {\n      this.router.navigate(['/clients']);\n    }\n  }\n\n  /**\n   * @description this function converts UI client model to actual request model that has to be sent to server\n   */\n  convertToClientRequestModel = () => {\n    const client: ClientRequest = {\n      clientName: this.clientModel.clientName,\n      about: this.clientModel.about,\n      projects: [],\n      isActive: this.clientModel.isActive\n    };\n    client.projects = this.clientModel.projects.length ? this.clientModel.projects.map(project => project.id) : [];\n    return client;\n  }\n\n  /**\n   * @description this function handles the add client logic\n   */\n  addClient = () => {\n    const client = this.convertToClientRequestModel();\n    const validation = ClientValidation(client);\n    this.errors = validation;\n    if (validation.isValid) {\n      if (this.isEditMode) {\n        this.clientService.editClient(client, this.route.snapshot.params.client).subscribe(res => {\n          alert('saved! redirecting to the new client ID');\n          this.router.navigate(['/clients/' + this.route.snapshot.params.client]);\n        });\n      } else {\n        this.clientService.addClient(client).subscribe((res: ClientResponse) => {\n          alert('saved! redirecting to the new client ID');\n          this.router.navigate(['/clients/' + res.clientID]);\n        });\n      }\n    }\n  }\n\n}\n","<ng-container>\n    <h1 class=\"title-1\"> New Client </h1>\n    <br>\n    <div class=\"time-bar\">\n        <div class=\"spaced-container\" *ngIf=\"'resourceData.firstName'\">\n            <div class=\"dynamic-input\">\n                <h1 class=\"sub-title-6 font-grey input-head\"> Client Name <span class=\"warning\"\n                        *ngIf=\"errors.clientName\">({{errors.clientName}})</span></h1>\n                <input class=\"input-bar sub-title-4\" type=\"text\" placeholder=\"Enter client name\"\n                    [(ngModel)]=\"clientModel.clientName\">\n                <br>\n                <h1 class=\"sub-title-6 font-grey input-head\"> Description <span class=\"warning\"\n                        *ngIf=\"errors.about\">({{errors.about}})</span></h1>\n                <textarea class=\"input-bar sub-title-4\" type=\"text\" placeholder=\"Enter description\"\n                    [(ngModel)]=\"clientModel.about\"></textarea>\n                <br>\n                <h1 class=\"sub-title-6 font-grey input-head\"> Projects <span class=\"warning\"\n                        *ngIf=\"errors.projects\">({{errors.projects}})</span></h1>\n                <div class=\"skills-wrapper\">\n                    <div class=\"skills-container\">\n                        <tag-input *ngIf=\"clientModel.projects.length > 0\"\n                            [(ngModel)]=\"clientModel.projects\" ngDefaultControl [hideForm]=\"true\"\n                            [identifyBy]=\"'id'\" [displayBy]=\"'name'\" (onRemove)=\"onProjectRemoved($event)\"\n                            [ripple]=\"false\" theme='minimal-theme'>\n                        </tag-input>\n                        <h1 *ngIf=\"clientModel.projects.length === 0\" class=\"sub-title-4 font-grey\"><em>Search\n                                and add projects\n                            </em>\n                        </h1>\n                    </div>\n                </div>\n                <br>\n                <div class=\"flex-display activity\">\n                    <h1 class=\"sub-title-6 font-grey input-head\"> Client State </h1>\n                    <input type=\"radio\" id=\"activity\" name=\"activity\" value=\"Active\" [(ngModel)]=\"activity\"\n                        (click)=\"onChangeActivity(true)\">\n                    <label for=\"Active\">Active</label><br>\n                    <input type=\"radio\" id=\"activity\" name=\"activity\" value=\"InActive\" [(ngModel)]=\"activity\"\n                        (click)=\"onChangeActivity(false)\">\n                    <label for=\"InActive\">Inactive</label><br>\n                </div>\n                <br>\n            </div>\n\n            <div class=\"right-view\">\n                <div class=\"tab-view\">\n                    <div class=\"tabs flex-display\">\n                        <h1 class=\"sub-title-6 tab pointer  cerulean-text active\"rel=\"add-projects\">\n                            Add projects \n                        </h1>\n                    </div>\n\n                    <div class=\" time-bar tab-container\">\n                        <div class=\"tab-body\" id=\"add-projects\">\n                            <div class=\"top-controls\">\n                                <div class=\"search-bar\">\n                                    <input type=\"text\" class=\"search-input-bar sub-title-6\" placeholder=\"Search Projects\"\n                                        (keyup)=\"onSearchProject($event)\" [formControl]=\"projectSuggestFormControl\" />\n                                </div>\n                            </div>\n                            <h5 class=\"tool-tip-input\">\n                                <em>Enter 3 or more\n                                    characters to\n                                    search</em></h5>\n                            <div class=\"projects-wrapper wrapper\" *ngIf=\"suggestedProjects && suggestedProjects.length\">\n                                <div class=\"project-container\">\n                                    <div class=\" project flex-display\" *ngFor=\"let project of suggestedProjects\">\n                                        <h1 class=\"sub-title-6\">{{ project.name }}\n                                        </h1>\n                                        <button type='button' (click)=\"addProject(project.id, project.name)\"\n                                            class=\"add-button\">\n                                            <fa-icon class=\"plus-icon\" [icon]=\"plusIcon\" title=\"Add Project\">\n                                            </fa-icon>Add\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"full-width flex-display\">\n                    <input class=\"button-xl pointer sub-title-6 flex-occupy\" type=\"button\" value=\"Save\"\n                        (click)=\"addClient()\" />\n                    &nbsp;&nbsp;\n                    <input class=\"button-xl pointer sub-title-6 flex-occupy warning\" type=\"button\" value=\"Cancel\"\n                        (click)=\"cancelConfirm()\" />\n                </div>\n            </div>\n        </div>\n    </div>\n</ng-container>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ClientsService } from '../../../core/core-data/clients/clients.service';\nimport { Client } from '../../../core/core-data/clients/clients';\n\n@Component({\n  selector: 'app-client-view',\n  templateUrl: './client-view.component.html',\n  styleUrls: ['./client-view.component.scss']\n})\nexport class ClientViewComponent implements OnInit {\n\n  client: Client;\n\n  // state\n  fetching = true;\n\n  constructor(private route: ActivatedRoute, private clientsService: ClientsService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.fetching = true;\n    this.clientsService.getClient(this.route.snapshot.params.client).subscribe(res => {\n      this.fetching = false;\n      this.client = res;\n    });\n  }\n\n  /**\n   * @method deleteConfirm\n   * @description confirms with user before deleting\n   */\n  deleteConfirm = () => {\n    if (confirm('Are you sure? Deleting cannot be undone!')) {\n      this.clientsService.deleteClient(this.route.snapshot.params.client).subscribe(res => {\n        this.router.navigate(['/clients']);\n      });\n    }\n  }\n\n  /**\n   * @method editRedirect\n   * @description redirects to the edit page for that client\n   */\n  editRedirect = () => {\n    this.router.navigate(['/clients/' + this.route.snapshot.params.client + '/edit']);\n  }\n\n}\n","<ng-container *ngIf=\"client\">\n    <h1 class=\"title-1\"> Client: {{ client.clientName }} #{{ client.clientID }}</h1>\n    <br>\n    <div class=\"time-bar\">\n        <div class=\"spaced-container\">\n            <div class=\"flex-pad\">\n                <div class=\"profile-container\">\n                    <h1 class=\"sub-title-2\"> <span class=\"font-grey\"> ID: </span> {{ client.clientID }}</h1>\n                    <h1 class=\"sub-title-2\"> <span class=\"font-grey\">Project Name: </span>\n                        {{ client.clientName }}</h1>\n                    <h1 class=\"sub-title-2\"> <span class=\"font-grey\"> Description: </span>\n                        {{ client.about }}</h1>\n                    <br>\n                </div>\n                <div class=\"flex-display\">\n                    <input class=\"button-xl pointer sub-title-6\" type=\"button\" value=\"Edit\" (click)=\"editRedirect()\" />\n                    &nbsp;&nbsp;\n                    <input class=\"button-xl pointer sub-title-6 warning\" type=\"button\" value=\"Delete\"\n                        (click)=\"deleteConfirm()\" />\n                </div>\n            </div>\n            <br>\n            <br>\n            <h3 class=\"sub-title-2\"> Projects </h3>\n            <br>\n            <div class=\"projects-wrapper\">\n                <div class=\"project-container\">\n                    <h1 *ngFor=\"let project of client.projects\" class=\"sub-title-4 project\">\n                        {{ project.projectName }}\n                    </h1>\n                </div>\n            </div>\n        </div>\n    </div>\n</ng-container>\n<app-loader *ngIf=\"fetching\"></app-loader>","import { Component, OnInit } from '@angular/core';\nimport { faUsers, faCaretSquareDown, faCaretSquareLeft } from '@fortawesome/free-solid-svg-icons';\nimport { ClientsService } from '../../../core/core-data/clients/clients.service';\nimport { ClientList } from './../../../core/core-data/clients/clientList';\nimport { PaginationService } from 'src/app/core/pagination/pagination.service';\nimport { Pagination } from 'src/app/core/pagination/pagination';\n\n@Component({\n  selector: 'app-clients-card',\n  templateUrl: './clients-card.component.html',\n  styleUrls: ['./clients-card.component.scss']\n})\nexport class ClientsCardComponent implements OnInit {\n  // icons for display\n  downIcon = faCaretSquareDown;\n  leftIcon = faCaretSquareLeft;\n  expandedIndex = -1;\n\n  // state\n  clients: ClientList[];\n  clientsUIModel = [];\n  fetching = true;\n\n  // pagination state\n  countOptions = [10, 20, 40];\n  sortOptions = ['Client ID', 'Client Name'];\n  activeOptions = ['All', 'Active', 'Inactive'];\n  totalItems = 30;\n\n  constructor(private clientService: ClientsService, private paginationService: PaginationService) { }\n\n  ngOnInit(): void {\n    this.getClientsList();\n  }\n\n  getClientsList = () => {\n    this.fetching = true;\n    this.clientService.getClients(this.retrievePageState.pageNumber, this.retrievePageState.itemsCount,\n      this.retrievePageState.sortOptions, this.retrievePageState.activeOptions)\n      .subscribe(clients => {\n        this.fetching = false;\n        const clientsModel = [];\n        clients.result.forEach(client => {\n          clientsModel.push(this.prepareClientUIModel(client));\n        });\n        this.totalItems = clients.totalPages * this.retrievePageState.itemsCount;\n        this.clientsUIModel = clientsModel;\n        this.clients = clients.result;\n      },\n        error => {\n          this.fetching = false;\n          this.clientsUIModel = [];\n        }\n      );\n  }\n\n  prepareClientUIModel = (client: ClientList) => {\n    const clientUIModel = {\n      clientID: client.clientID,\n      clientName: client.clientName,\n      icon: faUsers\n    };\n\n    return clientUIModel;\n  }\n\n  /**\n   * @method changePage\n   * @description Changes page number in pagination\n   * @param num Page number\n   */\n  changePage = (num: number) => {\n    this.changePageState(\n      {\n        id: 'client-pagination', pageNumber: num, itemsCount: this.retrievePageState.itemsCount,\n        sortOptions: this.retrievePageState.sortOptions, activeOptions: this.retrievePageState.activeOptions\n      }\n    );\n    this.getClientsList();\n  }\n\n  /**\n   * @method changeItemsCount\n   * @description Changes the number of items displayed in per page\n   * @param num Items count\n   */\n  changeItemsCount = (num: number) => {\n    this.changePageState({\n      id: 'client-pagination', pageNumber: 1, itemsCount: num, sortOptions: this.retrievePageState.sortOptions,\n      activeOptions: this.retrievePageState.activeOptions\n    });\n    this.getClientsList();\n  }\n\n  /**\n   * @method changeSortOption\n   * @description Changes sorting option for the items displayed\n   * @param option Sorting format option\n   */\n  changeSortOption = (option: string) => {\n    this.changePageState({\n      id: 'client-pagination', pageNumber: 1, itemsCount: this.retrievePageState.itemsCount,\n      sortOptions: option, activeOptions: this.retrievePageState.activeOptions\n    });\n    this.getClientsList();\n  }\n\n  /**\n   * @method changeActiveOption\n   * @description Changes active option for the items displayed\n   * @param option active format option\n   */\n  changeActiveOption = (option: string) => {\n    this.changePageState({\n      id: 'client-pagination', pageNumber: 1, itemsCount: this.retrievePageState.itemsCount,\n      sortOptions: this.retrievePageState.sortOptions, activeOptions: option\n    });\n    this.getClientsList();\n  }\n\n  /**\n   * @method changePageState\n   * @description Changes the state of pagination in service\n   */\n  changePageState = (pageState: Pagination) => {\n    this.paginationService.setClientsPageState(pageState);\n  }\n\n  /**\n   * @method retrievePageState\n   * @description Gets the current pagination state\n   */\n  get retrievePageState(): Pagination {\n    return this.paginationService.clientPageState;\n  }\n\n}\n","<div class=\"top-controls\">\n    <h1 class=\"title-1\"> Clients </h1>\n    <br>\n    <div class=\"search-bar\">\n        <input type=\"text\" class=\"search-input-bar sub-title-6\" placeholder=\"Search clients\" />\n        <input type=\"button\" class=\"button-search pointer\" value=\"Search\" />\n    </div> &nbsp;\n    <div class=\"flex-display\">\n        <div class=\"items-selector\">\n            <h3 class=\"sub-title-6 font-grey\"> Sort </h3>\n            <select [ngModel]=\"this.retrievePageState.sortOptions\" class=\"drop-down sub-title-6\"\n                (ngModelChange)=\"changeSortOption($event)\">\n                <option class=\"drop-option\" *ngFor=\"let option of sortOptions\" [ngValue]=\"option\">\n                    {{option}}\n                </option>\n            </select>\n        </div> &nbsp;\n        <div class=\"items-selector\">\n            <h3 class=\"sub-title-6 font-grey\"> Items &nbsp; </h3>\n            <select [ngModel]=\"this.retrievePageState.itemsCount\" (ngModelChange)=\"changeItemsCount($event)\"\n                class=\"drop-down sub-title-6\">\n                <option class=\"drop-option\" *ngFor=\" let count of countOptions\" [ngValue]=\"count\">\n                    {{count}}\n                </option>\n            </select>\n        </div> &nbsp;\n        <div class=\"items-selector\">\n            <h3 class=\"sub-title-6 font-grey\"> Show &nbsp; </h3>\n            <select [ngModel]=\"this.retrievePageState.activeOptions\" (ngModelChange)=\"changeActiveOption($event)\"\n                class=\"drop-down sub-title-6\">\n                <option class=\"drop-option\" *ngFor=\" let option of activeOptions\" [ngValue]=\"option\">\n                    {{option}}\n                </option>\n            </select>\n        </div>\n    </div>\n</div>\n<br>\n<div>\n    <div>\n        <div class=\"stack-row\" *ngIf=\"!fetching && clientsUIModel.length\">\n            <app-card class=\"appcard\" *ngFor=\"let client of clientsUIModel | paginate: { id: 'client-pagination', itemsPerPage: this.retrievePageState.itemsCount, currentPage: this.retrievePageState.pageNumber, totalItems: totalItems };\"\n                [routerLink]=\"client.clientID\" [title]=\"client.clientName\" [icon]=\"client.icon\"></app-card>\n        </div>\n        <pagination-controls id=\"client-pagination\" class=\"sub-title-6 text-centered\" (pageChange)=\"changePage($event)\">\n        </pagination-controls>\n    </div>\n    <app-loader *ngIf=\"fetching\"></app-loader>\n    <div class=\"no-records sub-title-6 text-centered\" *ngIf=\"!clientsUIModel.length && !fetching\"><strong>No records\n        found!</strong></div>\n    <input class=\"button-xl right-float pointer sub-title-6\" [routerLink]=\"'add'\" type=\"button\" value=\"Add Client\" />\n    <br>\n    <br>\n</div>\n","import { ClientAlterComponent } from './client-alter/client-alter.component';\nimport { ClientViewComponent } from './client-view/client-view.component';\nimport { ClientsCardComponent } from './clients-card/clients-card.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ClientsComponent } from './clients.component';\n\nconst routes: Routes = [\n  {\n    path: '', component: ClientsComponent,\n    children: [\n      {\n        path: '', component: ClientsCardComponent\n      },\n      {\n        path: 'add',\n        component: ClientAlterComponent\n      },\n      {\n        path: ':client',\n        component: ClientViewComponent\n      },\n      {\n        path: ':client/edit',\n        component: ClientAlterComponent\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\n\nexport class ClientsRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-clients',\n  templateUrl: './clients.component.html',\n  styleUrls: ['./clients.component.scss']\n})\nexport class ClientsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"coda-content\">\n    <router-outlet></router-outlet>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TagInputModule } from 'ngx-chips';\nimport { SharedModule } from '../../shared/shared.module';\n\nimport { ClientsRoutingModule } from './clients-routing.module';\nimport { ClientsComponent } from './clients.component';\nimport { ClientsCardComponent } from './clients-card/clients-card.component';\nimport { ClientViewComponent } from './client-view/client-view.component';\nimport { ClientAlterComponent } from './client-alter/client-alter.component';\n\n\n\n@NgModule({\n  declarations: [ClientsComponent, ClientsCardComponent, ClientViewComponent, ClientAlterComponent],\n  imports: [\n    CommonModule,\n    ClientsRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgxPaginationModule,\n    TagInputModule,\n    SharedModule\n  ],\n  exports: [\n    ClientsComponent\n  ]\n})\n\nexport class ClientsModule { }\n"],"sourceRoot":"webpack:///"}